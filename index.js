/**
 * 
 * JavaScript do aplicativo.
 * Depende de "jQuery" (https://jquery.com/).
 *
 * OBS 1: Este √© o aplicativo principal, para que o tema (template) do site
 * opere. Posteriormente, quando necess√°rio, cada p√°gina (conte√∫do) ter√° seu
 * pr√≥prio JavaScript, assim, somente o JavaScript necess√°rio ser√° carregado.
 *
 * OBS 2: Todas as instru√ß√µes que iniciam com um cifr√£o ($) s√£o da biblioteca
 * jQuery, ou seja, n√£o s√£o JavaScript "puro" (ou vanilla üòâ).
 *
 * Para saber mais:
 *  ‚Ä¢ https://www.w3schools.com/js/
 *  ‚Ä¢ https://www.w3schools.com/jsref/
 *  ‚Ä¢ https://www.w3schools.com/jquery/
 **/

/**
 * Algumas configura√ß√µes do aplicativo.
 * Dica: voc√™ pode acrescentar novas configura√ß√µes aqui se precisar.
 **/

var app = {
    siteName:'FrontEnd',
    siteSlogan: 'Programando para o futuro',
}

/**
 * jQuery ‚Üí Quando o documento estiver pronto, executa a fun√ß√£o principal,
 * 'runApp()'.
 * 
 * Refer√™ncias:
 *  ‚Ä¢ https://www.w3schools.com/jquery/jquery_syntax.asp
 **/
$(document).ready(myApp)

/**
 * Este √© o aplicativo principal, executado logo ap√≥s a carga dos documentos
 * est√°tivos (HTML e CSS) no navegador.
 * Aqui incluimos  as chamadas de todas as fun√ß√µes de inicializa√ß√£o e o 
 * monitoramento dos eventos do aplicativo.
 *
 * NOTA! 
 * Um aplicativo √© uma fun√ß√£o, um bloco de c√≥digo que fica armazenado na 
 * mem√≥ria do dispositivo e ser√° executado quando for "chamado" (invocado)
 * pelo nome.
 * 
 * Refer√™ncias:
 *  ‚Ä¢ https://www.w3schools.com/js/js_functions.asp
 **/
function myApp() {

    /**
     * Faz a carga da p√°gina inicial do SPA. A p√°gina a ser carregada na 
     * inicializa√ß√£o √© definida pela string par√¢metro e corresponde a uma
     * das subpastas de "/pages".
     * 
     * Posteriormente, esta chamada √† "loadpage()" ser√° otimizada para melhorar
     * o paradigma "SEO Friendly" do aplicativo.
     **/
    //loadpage('home')

     /**
      * Obt√©m nome da p√°gina que est√° sendo acessada, do 'localStorage'.
      * Estude '/404.html' para mais detalhes.
      **/
      const path = localStorage.path
      if (path) {                         // Se cliente est√° acessando uma p√°gina espec√≠fica...
          delete localStorage.path        // Limpa o 'localStorage'.
          loadpage(path);                 // Acessa a p√°gina solicitada.
      } else {                            // Se n√£o solicitou uma p√°gina espec√≠fica...
          loadpage('home');               // Carrega a p√°gina inicial.
      }

    /**
     * jQuery ‚Üí Monitora cliques em elementos "<a>" que, se ocorre, chama a fun√ß√£o 
     * routerLink().
     **/
    $(document).on('click','a', routerLink)
}

/**
 * Fun√ß√£o que processa o clique em um link.
 **/
function routerLink() {

     /**
     * Extrai o valor do atributo "href" do elemento clicado e armazena na 
     * vari√°vel "href".
     * 
     * OBS: $(this) faz refer√™ncia especificamente ao elemento que foi clicado.
     * 
     * Refer√™ncias:
     *  ‚Ä¢ https://api.jquery.com/attr/
     *  ‚Ä¢ https://www.w3schools.com/jquery/jquery_syntax.asp
     **/
    var href = $(this).attr('href').trim().toLowerCase()
  
    /**
     * Se clicou em um link externo (http://... OU https://...) ou em uma 
     * √¢ncora (#...),devolve o controle da p√°gina para o navegador (return true) 
     * que far√° o processamento normal.
     * 
     * OBS: Os carateres '||' (pipe pipe) significam a l√≥gica 'OR' (OU) onde, se 
     * apenas uma das express√µes for verdadeira, todas as express√µes ser√£o 
     * verdadeiras. Consulte as refer√™ncias.
     * 
     * Refer√™ncias:
     *  ‚Ä¢ https://www.w3schools.com/js/js_if_else.asp
     *  ‚Ä¢ https://www.w3schools.com/jsref/jsref_substr.asp
     *  ‚Ä¢ https://www.w3schools.com/js/js_comparisons.asp
     **/
    if(
        href.substring(0, 7) == 'http://' ||
        href.substring(0, 8) == 'https://' ||
        href.substring(0, 1) == '#'
    ){
    
        //Devolve o controle para o HTML.
        return true
    }
    
    /**
     * Carrega a rota solicitada.
     **/
    loadpage(href)    
    
    /**
     * Encerra o processamento do link sem fazer mais nada. 'return false' 
     * bloqueia a a√ß√£o normal do navegador sobre um link.
     **/
    return false
    
}


/**
 * Carrega uma p√°gina no SPA.
 * O caminho da p√°gina √© passado como string par√¢metro da fun√ß√£o e corresponde
 * a uma das subpastas de "/pages".
 * 
 * Para criar uma nova p√°gina no aplicativo:
 *  1. Acesse a pasta "/pages";
 *  2. Crie uma subpasta com o nome can√¥nico (rota) desta nova p√°gina;
 *     O nome da pasta deve ser curto e usar somente letras e n√∫meros, nunca
 *     iniciando com um n√∫mero e, preferencialmente usando somente letras 
 *     min√∫sculas. Por exemplo: /pages/mypage
 *  3. Crie os 3 componentes da p√°gina na subpasta e seu conte√∫do:
 *     ‚Ä¢ index.html ‚Üí (Model) documento HTML com o "corpo" da p√°gina a ser 
 *                    carregada no SPA;
 *     ‚Ä¢ index.css ‚Üí (View) documento CSS que estiliza a p√°gina.
 *     ‚Ä¢ index.js ‚Üí (Control) JavaScript de controle da p√°gina.
 *  4. Crie os links para a nova p√°gina, apontando-os para a rota desta, por 
 *     exemplo: <a href="mypage">Minha p√°gina</a>
 *  5. J√° para carregar esta p√°gina no SPA pelo JavaScript, comandamos 
 *     "loadpage('mypage')", por exemplo.
 **/
function loadpage(page) {

    /*
     * Monta os caminhos (path) para os componentes da p√°gina solicitada, 
     * √† partir do valor da vari√°vel "page".
     * Lembre-se que cada p√°gina √© formada por 3 componentes:
     *  ‚Ä¢ index.html ‚Üí (Model) documento HTML com o "corpo" da p√°gina a ser
     *                    carregada no SPA;
     *  ‚Ä¢ index.css ‚Üí (View) documento CSS que estiliza a p√°gina.
     *  ‚Ä¢ index.js ‚Üí (Control) JavaScript de controle da p√°gina.
     * 
     * IMPORTANTE!
     * Mesmo que n√£o seja necess√°rio um CSS ou JavaScript para a p√°gina, os 
     * arquivos "index.css" e "index.js" devem existir na pasta desta p√°gina
     * para evitar "erro 404". Neste caso, insira alguns coment√°rios nos 
     * documentos.
     * 
     * Refer√™ncias:
     *  ‚Ä¢ https://www.w3schools.com/js/js_objects.asp   
     *  ‚Ä¢ https://www.w3schools.com/js/js_string_templates.asp
     */
    const path = {
        html: `pages/${page}/index.html`,
        css: `pages/${page}/index.css`,
        js: `pages/${page}/index.js`
    }

    /**
     * jQuery ‚Üí Faz a requisi√ß√£o (request) do componente HTML da p√°gina, a ser 
     * inserido no SPA.
     * 
     * OBS: carregamos o HTML na mem√≥ria primeiro, para ter certeza que ele 
     * existe e n√£o vai dar erro 404.
     * 
     * Refer√™ncias:
     *  ‚Ä¢ https://www.w3schools.com/jquery/ajax_get.asp
     **/
    $.get(path.html)

        /**
         * Quando ocorrer um "response", os dados obtidos ser√£o carregados na 
         * mem√≥ria do aplicativo e estar√£o dispon√≠veis para uso deste.
         * Neste caso, criamos uma fun√ß√£o "sem nome" ()=>{} que obt√©m os dados
         * e armazena em "data" para uso posterior.
         * 
         * Refer√™ncias:
         *  ‚Ä¢ https://www.w3schools.com/js/js_arrow_function.asp
         **/
        .done((data) => {

            /**
             * jQuery ‚Üí Carrega o CSS da p√°gina solicitada na "index.html"
             * principal.
             **/
            $('#pageCSS').attr('href', path.css)

            /**
             * jQuery ‚Üí Obt√©m os dados da requisi√ß√£o, no caso, o conte√∫do do 
             * componente HTML da p√°gina e o exibe no elemento SPA ‚Üí <main>.
             **/
            $('main').html(data)

            /**
             * jQuery ‚Üí Obt√©m o c√≥digo JavaScript da p√°gina, carrega na mem√≥ria
             * e "executa".
             **/

            $.getScript(path.js)


        })

        /**
         * Caso o "request" falhe, por conta de o documento solicitado n√£o 
         * existir, carrega a p√°gina de erro "e404" ('/pages/e404') no SPA.
         **/
        .fail((error) => {

            /**
             * Carrega a p√°gina de erro 404 no SPA.
             */
            loadpage('e404')

            /**
             * Exibe a mensagem de erro que ocorreu no console, para depura√ß√£o.
             * Opcionalmente, esta linha poder√°/dever√° ser removida no momento
             * do deploy (publica√ß√£o) da vers√£o final.
             */
            console.error(error)
        })

            /**
    * Rola a tela para o in√≠cio, √∫til para links no final da p√°gina.
    * Refer√™ncias:
    *  ‚Ä¢ https://www.w3schools.com/jsref/met_win_scrollto.asp
    **/
    window.scrollTo(0, 0);

    /**
     * Atualiza URL da p√°gina com o endere√ßo da rota:
     * Refer√™ncias:
     *  ‚Ä¢ https://developer.mozilla.org/en-US/docs/Web/API/History/pushState
     **/
    window.history.pushState({}, '', page);


}

/**
 * Muda o t√≠tulo da p√°gina ‚Üí <title></title>
 * 
 * Instru√ß√µes:
 * Em cada arquivo "index.js" de cada p√°gina, inclua uma chamada para esta 
 * fun√ß√£o, passando como par√¢metro o t√≠tulo que deve aparecer.
 * 
 * Quando o par√¢metro estiver vazio (DEFAULT) o t√≠tulo ser√°:
 *  ‚Ä¢ app.sitename - app.siteslogan
 * Quando o par√¢metro for informado, o t√≠tulo ser√°:
 *  ‚Ä¢ app.sitename - par√¢metro
 * 
 **/
function changeTitle(title = '') {

      /**
     * Define o t√≠tulo padr√£o da p√°gina.
     */
    let pageTitle = app.siteName + ' : '

    /**
     * Se n√£o foi definido um t√≠tulo para a p√°gina, 
     * usa o slogan.
     **/
    if (title == '') pageTitle += app.siteSlogan
    
    /**
     * Se foi definido um t√≠tulo, usa-o.
     */
    else pageTitle += title
    
    /**
     * Escreve o novo t√≠tulo na tag <title></title>.
     */
    $('title').html(pageTitle)


}
    